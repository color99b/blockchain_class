! 그리드 박스는 플렉스 박스와 비슷하나 디자인에 초점이 더 맞춰져있고, 영역분할이 조금 더 확실하다
    flex는 자동맞춤, 한쪽 방향으로 진행, 흐름이 있고, flex-wrap으로 텍스트랑 비슷한 진행 등이 있고
        -> 반응형으로 만들 때 스크롤에 따라 다음줄로 넘어가는 기능이 필요할 때 사용하면 좋을듯
    grid는 셀의 개수만큼만 차지 minmax로 반응형 만들 수 있긴하지만 페이지전체로 봤을때 flex처럼 줄바꿔지는건 없음
        -> 가로 셀의 개수를 3개로 정했는데 아이템을 추가하면 다음줄로 밀림 -> 코드상 wrap은 있음

@ 보더만 주고 다른 세팅 안만지면, 겹치는 부분이 선이 겹쳐서 두꺼워짐

@ repeat(개수, 크기) -> 개수만큼 크기를 반복 입력해주는 함수
    ㅣ-> ex) gird-template-columns: repeat(2, 200px);  = grid-template-columns: 200px 200px;

@ 그리드는 기본적으로 아이템사이의 간격이 없는 세팅인데 간격을 주고 싶으면
    세로는 row-gap / 가로는 column-gap |


@ minmax(최소,최대) -> 이름그대로 최소 최대를 결정하고, 그 사이에서는 브라우저 환경에 맞게 움직임
    ㅣ-> width 는 괜찮은데 height 는 길어지면 스크롤이 생겨버리므로 높이에는 그다지 활용적이지 못함.


@ display:grid; 로 그리드 박스를 만든다 (부모역활 )

-> grid-template-row : 개수만큼높이지정 ex 2개 : 200px 200px

-> grid-template-column : 개수만큼너비지정 ex 3개 : 150px 150px 100px


@보통 자신의 크기 결정은 width, height / 영역 크기는 column, row /

@ grid-auto-flow : 속성값; -> gird속 item의 진행 방향을 설정한다.


@ grid-areas랑 grid row랑 섞으면 이상하게 나옴. 같은 그리드안에서 두가지 방법을 섞으면 안됨


@ calc(100% /3 )==> 계산함수 grid-template-columns: repeat(3, calc(100% /3));
-> 이런식으로 화면에 맞게 조정가능
-> 그리드박스에 적용해서 그리드박스로 반응형으로 만들 수 있을 듯.