!!오늘의 배울것.

!브라우저의 작동원리



!html 파일을 받아서 어떻게 화면에 출력하는지.


!javascript를 html에서 사용하는 방법.



!변수
-> 데이터를 담은 상자.
ex) 이사를 하면 상자에다가 뭘 넣었는지 이름을 붙인다. -> 그 상자 안에 맞는 물건을 넣는다
-> 차에 옮긴다.
    ㅣ-> 데이터를 사용한다 -> 변수를 선언한다 -> 변수에 데이터를 정의한다 -> 그걸 램에 담아둔다.

# 다른 프로그램에서는 메모리 위치를 알 수있는데, javascript 에서는 없다.

# var는 문제가 많아 요즘은 잘 쓰지 않는다.


#let 은 선언 후 재정의 가능 / const는 선언 후 재 정의 불가능
    -> const는 선언과 정의가 동시에 진행되어야함 -> 초기화로 진행 (지역변수 상수? 느낌인가)
    -> 둘 다 재선언이 안되서 var는 중복문제가 발생할 수 있는데 이 친구들은 재선언시 빨간줄 뜸
    -> let, const 을 쓰지 않으면 var로 자동으로 사용됨





!자료형
->string, number, boolean, undefined, null, object, array
string: 텍스트 (약자로 str)
 ㅣ-> "",'' : 한 줄 텍스트
      `` : 템플릿 리터널이라고 부른다. 여러줄 가능. (코드상)
      

number : 숫자
 ㅣ-> 계산식을 정의해도 숫자가 정상적으로 들어간다.


boolean : 참거짓, bool이라고 많이 부른다.
 ㅣ-> 
undefined, null : 둘 다 값이 없음.
 ㅣ-> 내가 설정했느냐 설정하지 않았느냐 차인데 쓰기로는 둘이 차이가 없다.
      잘 안쓰기도 하고 다른 언어 쓰는 사람은 null 쓰고 자바스크립트 쓰면 undefined 주로 쓴다.


object : 키와 값으로 이루어진 객체.
array : 배열


?? javascript에서는 배열이 없고 순차적인 데이터로 기억하면되는데 배열이 없는 이유는 찾아봐야함.



==========================================

@ srcipt는 html에서 javascript를 입력하는 태그이다.
-> html, css, javascript는 문법이 다 달라서 주석도 다다름


@ console.log("문자열"), console.log(변수명) : 콘솔에 값을 찍음.


@ '' , "", `` 할때 프리티어가 따옴표, 쌍따옴표를  통일시켜 버릴 수 있어서 주의해야함.

@변수명에 - 섞으면 마이너스로 인식함.

@ 삭제는 보통 null을 넣어서 안쓴다는 식으로 사용

@ let/const **** 에서 ****이 변수명(식별자)이다.
 ㅣ-> 자바스크립트는 자료형 변수명 선언 순이 아니라 let 하고 변수명 쓰고 안에 담는 내용에 따라
        자동으로 자료형이 정해지는듯

@ 변수에 대한 표기법(식별자 표기법)
 ㅣ-> Kebab Case (케밥 표기법) : let kebal-case; (변수 띄어쓰기를 - 로 하면 마이너스가 되버림)
      Camel Case (카멜 표기법) : let camelCase; (띄어쓰기한 거를 대문자로 표현함 / 선언의 정석 / 리액트에서 예외있음)
      snake Case (뱀 표기법) : let snake_case; (언더바 로 띄어쓰기)
      Pascal Case(파스칼 표기법) : let PascalCase; (단어마다 대문자로 사용, 리액트에서 사용)
      hungarian notation (헝가리안 표기법) : let strHungarianNotation; (요즘 안씀/ 변수명 제일 앞에 자료형을 적어줌.)


@ 연산자 ( 이름 그대로 연산 하는 것. 명령어)
 ㅣ-> +, -, /, *, ++, --, -, !, &&, ||, =, +=, -=, *=, /=, %=, **=, ==, ===, !=, !==, >, <, >=, <=
    + : 숫자는 더하기 / 글자는 붙여줌. / 숫자 + 글자 면 글자취급함.
    -,*,/,%,** : 숫자에서만 사용 
    % : 나머지를 찾아줌.
    ** : 제곱
    ++,-- : 카운터용으로 사용. 숫자를 하나 늘리거나 줄이거나.
        변수 앞에 붙으면 늘이거나 줄여놓고 계산시작 / 뒤에 붙으면 일단 출력이든 계산이든 하고 나서 변수값 늘이거나 줄임
    -, ! : 현재 상태의 부정 ( 변수가 true -> false / false -> true)
    !! : 부정의 부정 -> 현재가 boolean 값이 아닐때 boolean 값으로 변환할 때 사용됨
    === : 자료형까지 확인해서 판단
    == : 값만 확인해서 판단
    !== : === 처럼 != 에서 자료형까지 확인
    


@ 코딩할때 변수명 한글로 쓰면 터짐 -> 자바스크립트만 됨    
    
